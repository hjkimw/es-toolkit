import { castArray as _castArray } from './array/castArray.ts';
import { chunk as _chunk } from './array/chunk.ts';
import { compact as _compact } from './array/compact.ts';
import { concat as _concat } from './array/concat.ts';
import { difference as _difference } from './array/difference.ts';
import { differenceBy as _differenceBy } from './array/differenceBy.ts';
import { differenceWith as _differenceWith } from './array/differenceWith.ts';
import { drop as _drop } from './array/drop.ts';
import { dropRight as _dropRight } from './array/dropRight.ts';
import { dropRightWhile as _dropRightWhile } from './array/dropRightWhile.ts';
import { dropWhile as _dropWhile } from './array/dropWhile.ts';
import { every as _every } from './array/every.ts';
import { fill as _fill } from './array/fill.ts';
import { filter as _filter } from './array/filter.ts';
import { find as _find } from './array/find.ts';
import { findIndex as _findIndex } from './array/findIndex.ts';
import { findLast as _findLast } from './array/findLast.ts';
import { findLastIndex as _findLastIndex } from './array/findLastIndex.ts';
import { flatten as _flatten } from './array/flatten.ts';
import { flattenDeep as _flattenDeep } from './array/flattenDeep.ts';
import { flattenDepth as _flattenDepth } from './array/flattenDepth.ts';
import { forEach as _each } from './array/forEach.ts';
import { forEach as _forEach } from './array/forEach.ts';
import { head as _head } from './array/head.ts';
import { head as _first } from './array/head.ts';
import { includes as _includes } from './array/includes.ts';
import { indexOf as _indexOf } from './array/indexOf.ts';
import { intersection as _intersection } from './array/intersection.ts';
import { intersectionBy as _intersectionBy } from './array/intersectionBy.ts';
import { intersectionWith as _intersectionWith } from './array/intersectionWith.ts';
import { join as _join } from './array/join.ts';
import { last as _last } from './array/last.ts';
import { lastIndexOf as _lastIndexOf } from './array/lastIndexOf.ts';
import { map as _map } from './array/map.ts';
import { nth as _nth } from './array/nth.ts';
import { orderBy as _orderBy } from './array/orderBy.ts';
import { pull as _pull } from './array/pull.ts';
import { pullAll as _pullAll } from './array/pullAll.ts';
import { pullAllBy as _pullAllBy } from './array/pullAllBy.ts';
import { reduce as _reduce } from './array/reduce.ts';
import { reduceRight as _reduceRight } from './array/reduceRight.ts';
import { reject as _reject } from './array/reject.ts';
import { remove as _remove } from './array/remove.ts';
import { reverse as _reverse } from './array/reverse.ts';
import { sample as _sample } from './array/sample.ts';
import { size as _size } from './array/size.ts';
import { slice as _slice } from './array/slice.ts';
import { some as _some } from './array/some.ts';
import { sortBy as _sortBy } from './array/sortBy.ts';
import { sortedIndex as _sortedIndex } from './array/sortedIndex.ts';
import { sortedIndexBy as _sortedIndexBy } from './array/sortedIndexBy.ts';
import { sortedIndexOf as _sortedIndexOf } from './array/sortedIndexOf.ts';
import { sortedLastIndex as _sortedLastIndex } from './array/sortedLastIndex.ts';
import { sortedLastIndexBy as _sortedLastIndexBy } from './array/sortedLastIndexBy.ts';
import { tail as _tail } from './array/tail.ts';
import { take as _take } from './array/take.ts';
import { takeRight as _takeRight } from './array/takeRight.ts';
import { takeRightWhile as _takeRightWhile } from './array/takeRightWhile.ts';
import { takeWhile as _takeWhile } from './array/takeWhile.ts';
import { union as _union } from './array/union.ts';
import { unionBy as _unionBy } from './array/unionBy.ts';
import { unionWith as _unionWith } from './array/unionWith.ts';
import { uniq as _uniq } from './array/uniq.ts';
import { uniqBy as _uniqBy } from './array/uniqBy.ts';
import { uniqWith as _uniqWith } from './array/uniqWith.ts';
import { unzip as _unzip } from './array/unzip.ts';
import { without as _without } from './array/without.ts';
import { zip as _zip } from './array/zip.ts';
import { zipObjectDeep as _zipObjectDeep } from './array/zipObjectDeep.ts';
import { after as _after } from './function/after.ts';
import { ary as _ary } from './function/ary.ts';
import { attempt as _attempt } from './function/attempt.ts';
import { before as _before } from './function/before.ts';
import { bind as _bind } from './function/bind.ts';
import { bindKey as _bindKey } from './function/bindKey.ts';
import { curry as _curry } from './function/curry.ts';
import { curryRight as _curryRight } from './function/curryRight.ts';
import { debounce as _debounce } from './function/debounce.ts';
import { defer as _defer } from './function/defer.ts';
import { delay as _delay } from './function/delay.ts';
import { flip as _flip } from './function/flip.ts';
import { flow as _flow } from './function/flow.ts';
import { flowRight as _flowRight } from './function/flowRight.ts';
import { negate as _negate } from './function/negate.ts';
import { nthArg as _nthArg } from './function/nthArg.ts';
import { partial as _partial } from './function/partial.ts';
import { partialRight as _partialRight } from './function/partialRight.ts';
import { rearg as _rearg } from './function/rearg.ts';
import { rest as _rest } from './function/rest.ts';
import { spread as _spread } from './function/spread.ts';
import { throttle as _throttle } from './function/throttle.ts';
import { add as _add } from './math/add.ts';
import { ceil as _ceil } from './math/ceil.ts';
import { clamp as _clamp } from './math/clamp.ts';
import { divide as _divide } from './math/divide.ts';
import { floor as _floor } from './math/floor.ts';
import { inRange as _inRange } from './math/inRange.ts';
import { max as _max } from './math/max.ts';
import { maxBy as _maxBy } from './math/maxBy.ts';
import { mean as _mean } from './math/mean.ts';
import { meanBy as _meanBy } from './math/meanBy.ts';
import { min as _min } from './math/min.ts';
import { minBy as _minBy } from './math/minBy.ts';
import { multiply as _multiply } from './math/multiply.ts';
import { parseInt as _parseInt } from './math/parseInt.ts';
import { random as _random } from './math/random.ts';
import { range as _range } from './math/range.ts';
import { rangeRight as _rangeRight } from './math/rangeRight.ts';
import { round as _round } from './math/round.ts';
import { subtract as _subtract } from './math/subtract.ts';
import { sum as _sum } from './math/sum.ts';
import { sumBy as _sumBy } from './math/sumBy.ts';
import { assign as _assign } from './object/assign.ts';
import { assignIn as _assignIn } from './object/assignIn.ts';
import { assignIn as _extend } from './object/assignIn.ts';
import { assignInWith as _assignInWith } from './object/assignInWith.ts';
import { assignInWith as _extendWith } from './object/assignInWith.ts';
import { assignWith as _assignWith } from './object/assignWith.ts';
import { cloneDeep as _cloneDeep } from './object/cloneDeep.ts';
import { cloneDeepWith as _cloneDeepWith } from './object/cloneDeepWith.ts';
import { create as _create } from './object/create.ts';
import { defaults as _defaults } from './object/defaults.ts';
import { findKey as _findKey } from './object/findKey.ts';
import { fromPairs as _fromPairs } from './object/fromPairs.ts';
import { functions as _functions } from './object/functions.ts';
import { functionsIn as _functionsIn } from './object/functionsIn.ts';
import { get as _get } from './object/get.ts';
import { has as _has } from './object/has.ts';
import { invertBy as _invertBy } from './object/invertBy.ts';
import { keys as _keys } from './object/keys.ts';
import { keysIn as _keysIn } from './object/keysIn.ts';
import { mapKeys as _mapKeys } from './object/mapKeys.ts';
import { mapValues as _mapValues } from './object/mapValues.ts';
import { merge as _merge } from './object/merge.ts';
import { mergeWith as _mergeWith } from './object/mergeWith.ts';
import { omit as _omit } from './object/omit.ts';
import { pick as _pick } from './object/pick.ts';
import { pickBy as _pickBy } from './object/pickBy.ts';
import { property as _property } from './object/property.ts';
import { propertyOf as _propertyOf } from './object/propertyOf.ts';
import { set as _set } from './object/set.ts';
import { toDefaulted as _toDefaulted } from './object/toDefaulted.ts';
import { toPairs as _toPairs } from './object/toPairs.ts';
import { toPairsIn as _toPairsIn } from './object/toPairsIn.ts';
import { unset as _unset } from './object/unset.ts';
import { update as _update } from './object/update.ts';
import { updateWith as _updateWith } from './object/updateWith.ts';
import { values as _values } from './object/values.ts';
import { valuesIn as _valuesIn } from './object/valuesIn.ts';
import { conforms as _conforms } from './predicate/conforms.ts';
import { conformsTo as _conformsTo } from './predicate/conformsTo.ts';
import { isArguments as _isArguments } from './predicate/isArguments.ts';
import { isArray as _isArray } from './predicate/isArray.ts';
import { isArrayBuffer as _isArrayBuffer } from './predicate/isArrayBuffer.ts';
import { isArrayLike as _isArrayLike } from './predicate/isArrayLike.ts';
import { isArrayLikeObject as _isArrayLikeObject } from './predicate/isArrayLikeObject.ts';
import { isBoolean as _isBoolean } from './predicate/isBoolean.ts';
import { isBuffer as _isBuffer } from './predicate/isBuffer.ts';
import { isDate as _isDate } from './predicate/isDate.ts';
import { isElement as _isElement } from './predicate/isElement.ts';
import { isEmpty as _isEmpty } from './predicate/isEmpty.ts';
import { isEqualWith as _isEqualWith } from './predicate/isEqualWith.ts';
import { isError as _isError } from './predicate/isError.ts';
import { isFinite as _isFinite } from './predicate/isFinite.ts';
import { isInteger as _isInteger } from './predicate/isInteger.ts';
import { isMap as _isMap } from './predicate/isMap.ts';
import { isMatch as _isMatch } from './predicate/isMatch.ts';
import { isNaN as _isNaN } from './predicate/isNaN.ts';
import { isNil as _isNil } from './predicate/isNil.ts';
import { isNumber as _isNumber } from './predicate/isNumber.ts';
import { isObject as _isObject } from './predicate/isObject.ts';
import { isObjectLike as _isObjectLike } from './predicate/isObjectLike.ts';
import { isPlainObject as _isPlainObject } from './predicate/isPlainObject.ts';
import { isRegExp as _isRegExp } from './predicate/isRegExp.ts';
import { isSafeInteger as _isSafeInteger } from './predicate/isSafeInteger.ts';
import { isSet as _isSet } from './predicate/isSet.ts';
import { isString as _isString } from './predicate/isString.ts';
import { isSymbol as _isSymbol } from './predicate/isSymbol.ts';
import { isTypedArray as _isTypedArray } from './predicate/isTypedArray.ts';
import { isWeakMap as _isWeakMap } from './predicate/isWeakMap.ts';
import { isWeakSet as _isWeakSet } from './predicate/isWeakSet.ts';
import { matches as _matches } from './predicate/matches.ts';
import { matchesProperty as _matchesProperty } from './predicate/matchesProperty.ts';
import { camelCase as _camelCase } from './string/camelCase.ts';
import { deburr as _deburr } from './string/deburr.ts';
import { endsWith as _endsWith } from './string/endsWith.ts';
import { escape as _escape } from './string/escape.ts';
import { escapeRegExp as _escapeRegExp } from './string/escapeRegExp.ts';
import { kebabCase as _kebabCase } from './string/kebabCase.ts';
import { lowerCase as _lowerCase } from './string/lowerCase.ts';
import { lowerFirst as _lowerFirst } from './string/lowerFirst.ts';
import { pad as _pad } from './string/pad.ts';
import { padEnd as _padEnd } from './string/padEnd.ts';
import { padStart as _padStart } from './string/padStart.ts';
import { repeat as _repeat } from './string/repeat.ts';
import { replace as _replace } from './string/replace.ts';
import { snakeCase as _snakeCase } from './string/snakeCase.ts';
import { startCase as _startCase } from './string/startCase.ts';
import { startsWith as _startsWith } from './string/startsWith.ts';
import { template as _template, templateSettings as _templateSettings } from './string/template.ts';
import { toLower as _toLower } from './string/toLower.ts';
import { toUpper as _toUpper } from './string/toUpper.ts';
import { trim as _trim } from './string/trim.ts';
import { trimEnd as _trimEnd } from './string/trimEnd.ts';
import { trimStart as _trimStart } from './string/trimStart.ts';
import { unescape as _unescape } from './string/unescape.ts';
import { upperCase as _upperCase } from './string/upperCase.ts';
import { upperFirst as _upperFirst } from './string/upperFirst.ts';
import { words as _words } from './string/words.ts';
import { cond as _cond } from './util/cond.ts';
import { constant as _constant } from './util/constant.ts';
import { defaultTo as _defaultTo } from './util/defaultTo.ts';
import { eq as _eq } from './util/eq.ts';
import { gt as _gt } from './util/gt.ts';
import { gte as _gte } from './util/gte.ts';
import { invoke as _invoke } from './util/invoke.ts';
import { iteratee as _iteratee } from './util/iteratee.ts';
import { lt as _lt } from './util/lt.ts';
import { lte as _lte } from './util/lte.ts';
import { method as _method } from './util/method.ts';
import { methodOf as _methodOf } from './util/methodOf.ts';
import { now as _now } from './util/now.ts';
import { over as _over } from './util/over.ts';
import { stubArray as _stubArray } from './util/stubArray.ts';
import { stubFalse as _stubFalse } from './util/stubFalse.ts';
import { stubObject as _stubObject } from './util/stubObject.ts';
import { stubString as _stubString } from './util/stubString.ts';
import { stubTrue as _stubTrue } from './util/stubTrue.ts';
import { times as _times } from './util/times.ts';
import { toArray as _toArray } from './util/toArray.ts';
import { toFinite as _toFinite } from './util/toFinite.ts';
import { toInteger as _toInteger } from './util/toInteger.ts';
import { toLength as _toLength } from './util/toLength.ts';
import { toNumber as _toNumber } from './util/toNumber.ts';
import { toPath as _toPath } from './util/toPath.ts';
import { toPlainObject as _toPlainObject } from './util/toPlainObject.ts';
import { toSafeInteger as _toSafeInteger } from './util/toSafeInteger.ts';
import { toString as _toString } from './util/toString.ts';
import { uniqueId as _uniqueId } from './util/uniqueId.ts';

export function toolkit(value: any): any {
  return value;
}

toolkit.castArray = _castArray;
toolkit.chunk = _chunk;
toolkit.compact = _compact;
toolkit.concat = _concat;
toolkit.difference = _difference;
toolkit.differenceBy = _differenceBy;
toolkit.differenceWith = _differenceWith;
toolkit.drop = _drop;
toolkit.dropRight = _dropRight;
toolkit.dropRightWhile = _dropRightWhile;
toolkit.dropWhile = _dropWhile;
toolkit.every = _every;
toolkit.fill = _fill;
toolkit.filter = _filter;
toolkit.find = _find;
toolkit.findIndex = _findIndex;
toolkit.findLast = _findLast;
toolkit.findLastIndex = _findLastIndex;
toolkit.flatten = _flatten;
toolkit.flattenDeep = _flattenDeep;
toolkit.flattenDepth = _flattenDepth;
toolkit.forEach = _each;
toolkit.forEach = _forEach;
toolkit.head = _head;
toolkit.head = _first;
toolkit.includes = _includes;
toolkit.indexOf = _indexOf;
toolkit.intersection = _intersection;
toolkit.intersectionBy = _intersectionBy;
toolkit.intersectionWith = _intersectionWith;
toolkit.join = _join;
toolkit.last = _last;
toolkit.lastIndexOf = _lastIndexOf;
toolkit.map = _map;
toolkit.nth = _nth;
toolkit.orderBy = _orderBy;
toolkit.pull = _pull;
toolkit.pullAll = _pullAll;
toolkit.pullAllBy = _pullAllBy;
toolkit.reduce = _reduce;
toolkit.reduceRight = _reduceRight;
toolkit.reject = _reject;
toolkit.remove = _remove;
toolkit.reverse = _reverse;
toolkit.sample = _sample;
toolkit.size = _size;
toolkit.slice = _slice;
toolkit.some = _some;
toolkit.sortBy = _sortBy;
toolkit.sortedIndex = _sortedIndex;
toolkit.sortedIndexBy = _sortedIndexBy;
toolkit.sortedIndexOf = _sortedIndexOf;
toolkit.sortedLastIndex = _sortedLastIndex;
toolkit.sortedLastIndexBy = _sortedLastIndexBy;
toolkit.tail = _tail;
toolkit.take = _take;
toolkit.takeRight = _takeRight;
toolkit.takeRightWhile = _takeRightWhile;
toolkit.takeWhile = _takeWhile;
toolkit.union = _union;
toolkit.unionBy = _unionBy;
toolkit.unionWith = _unionWith;
toolkit.uniq = _uniq;
toolkit.uniqBy = _uniqBy;
toolkit.uniqWith = _uniqWith;
toolkit.unzip = _unzip;
toolkit.without = _without;
toolkit.zip = _zip;
toolkit.zipObjectDeep = _zipObjectDeep;

toolkit.after = _after;
toolkit.ary = _ary;
toolkit.attempt = _attempt;
toolkit.before = _before;
toolkit.bind = _bind;
toolkit.bindKey = _bindKey;
toolkit.curry = _curry;
toolkit.curryRight = _curryRight;
toolkit.debounce = _debounce;
toolkit.defer = _defer;
toolkit.delay = _delay;
toolkit.flip = _flip;
toolkit.flow = _flow;
toolkit.flowRight = _flowRight;
toolkit.negate = _negate;
toolkit.nthArg = _nthArg;
toolkit.partial = _partial;
toolkit.partialRight = _partialRight;
toolkit.rearg = _rearg;
toolkit.rest = _rest;
toolkit.spread = _spread;
toolkit.throttle = _throttle;

toolkit.add = _add;
toolkit.ceil = _ceil;
toolkit.clamp = _clamp;
toolkit.divide = _divide;
toolkit.floor = _floor;
toolkit.inRange = _inRange;
toolkit.max = _max;
toolkit.maxBy = _maxBy;
toolkit.mean = _mean;
toolkit.meanBy = _meanBy;
toolkit.min = _min;
toolkit.minBy = _minBy;
toolkit.multiply = _multiply;
toolkit.parseInt = _parseInt;
toolkit.random = _random;
toolkit.range = _range;
toolkit.rangeRight = _rangeRight;
toolkit.round = _round;
toolkit.subtract = _subtract;
toolkit.sum = _sum;
toolkit.sumBy = _sumBy;

toolkit.assign = _assign;
toolkit.assignIn = _assignIn;
toolkit.assignInWith = _assignInWith;
toolkit.assignWith = _assignWith;
toolkit.extend = _extend;
toolkit.extendWith = _extendWith;
toolkit.cloneDeep = _cloneDeep;
toolkit.cloneDeepWith = _cloneDeepWith;
toolkit.create = _create;
toolkit.defaults = _defaults;
toolkit.findKey = _findKey;
toolkit.fromPairs = _fromPairs;
toolkit.functions = _functions;
toolkit.functionsIn = _functionsIn;
toolkit.get = _get;
toolkit.has = _has;
toolkit.invertBy = _invertBy;
toolkit.keys = _keys;
toolkit.keysIn = _keysIn;
toolkit.mapKeys = _mapKeys;
toolkit.mapValues = _mapValues;
toolkit.merge = _merge;
toolkit.mergeWith = _mergeWith;
toolkit.omit = _omit;
toolkit.pick = _pick;
toolkit.pickBy = _pickBy;
toolkit.property = _property;
toolkit.propertyOf = _propertyOf;
toolkit.set = _set;
toolkit.toDefaulted = _toDefaulted;
toolkit.toPairs = _toPairs;
toolkit.toPairsIn = _toPairsIn;
toolkit.unset = _unset;
toolkit.update = _update;
toolkit.updateWith = _updateWith;
toolkit.values = _values;
toolkit.valuesIn = _valuesIn;

toolkit.conforms = _conforms;
toolkit.conformsTo = _conformsTo;
toolkit.isArguments = _isArguments;
toolkit.isArray = _isArray;
toolkit.isArrayBuffer = _isArrayBuffer;
toolkit.isArrayLike = _isArrayLike;
toolkit.isArrayLikeObject = _isArrayLikeObject;
toolkit.isBoolean = _isBoolean;
toolkit.isBuffer = _isBuffer;
toolkit.isDate = _isDate;
toolkit.isElement = _isElement;
toolkit.isEmpty = _isEmpty;
toolkit.isEqualWith = _isEqualWith;
toolkit.isError = _isError;
toolkit.isFinite = _isFinite;
toolkit.isInteger = _isInteger;
toolkit.isMap = _isMap;
toolkit.isMatch = _isMatch;
toolkit.isNaN = _isNaN;
toolkit.isNil = _isNil;
toolkit.isNumber = _isNumber;
toolkit.isObject = _isObject;
toolkit.isObjectLike = _isObjectLike;
toolkit.isPlainObject = _isPlainObject;
toolkit.isRegExp = _isRegExp;
toolkit.isSafeInteger = _isSafeInteger;
toolkit.isSet = _isSet;
toolkit.isString = _isString;
toolkit.isSymbol = _isSymbol;
toolkit.isTypedArray = _isTypedArray;
toolkit.isWeakMap = _isWeakMap;
toolkit.isWeakSet = _isWeakSet;
toolkit.matches = _matches;
toolkit.matchesProperty = _matchesProperty;

toolkit.camelCase = _camelCase;
toolkit.deburr = _deburr;
toolkit.endsWith = _endsWith;
toolkit.escape = _escape;
toolkit.escapeRegExp = _escapeRegExp;
toolkit.kebabCase = _kebabCase;
toolkit.lowerCase = _lowerCase;
toolkit.lowerFirst = _lowerFirst;
toolkit.pad = _pad;
toolkit.padEnd = _padEnd;
toolkit.padStart = _padStart;
toolkit.repeat = _repeat;
toolkit.replace = _replace;
toolkit.snakeCase = _snakeCase;
toolkit.startCase = _startCase;
toolkit.startsWith = _startsWith;
toolkit.template = _template;
toolkit.templateSettings = _templateSettings;
toolkit.toLower = _toLower;
toolkit.toUpper = _toUpper;
toolkit.trim = _trim;
toolkit.trimEnd = _trimEnd;
toolkit.trimStart = _trimStart;
toolkit.unescape = _unescape;
toolkit.upperCase = _upperCase;
toolkit.upperFirst = _upperFirst;
toolkit.words = _words;

toolkit.cond = _cond;
toolkit.constant = _constant;
toolkit.defaultTo = _defaultTo;
toolkit.eq = _eq;
toolkit.gt = _gt;
toolkit.gte = _gte;
toolkit.invoke = _invoke;
toolkit.iteratee = _iteratee;
toolkit.lt = _lt;
toolkit.lte = _lte;
toolkit.method = _method;
toolkit.methodOf = _methodOf;
toolkit.now = _now;

toolkit.over = _over;
toolkit.stubArray = _stubArray;
toolkit.stubFalse = _stubFalse;
toolkit.stubObject = _stubObject;
toolkit.stubString = _stubString;
toolkit.stubTrue = _stubTrue;
toolkit.times = _times;
toolkit.toArray = _toArray;
toolkit.toFinite = _toFinite;
toolkit.toInteger = _toInteger;
toolkit.toLength = _toLength;
toolkit.toNumber = _toNumber;
toolkit.toPath = _toPath;
toolkit.toPlainObject = _toPlainObject;
toolkit.toSafeInteger = _toSafeInteger;
toolkit.toString = _toString;
toolkit.uniqueId = _uniqueId;

// Set the placeholder for partial and partialRight
toolkit.partial.placeholder = toolkit;
toolkit.partialRight.placeholder = toolkit;
